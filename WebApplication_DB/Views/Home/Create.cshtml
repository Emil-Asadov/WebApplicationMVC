@model WebApplication_DB.Models.ClassControls

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @*<h4>ClassControls</h4>*@
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group" style="display:none">
            @*style="display:none"- div-in visible=false edir*@
            @Html.LabelFor(model => model.custIdn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.custIdn, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.HiddenFor- Yalniz input controlu gizledir*@
                @Html.HiddenFor(model => model.custIdn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.custIdn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Adı daxil edin", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.surname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.surname, new { htmlAttributes = new { @class = "form-control", @placeholder = "Soyadı daxil edin", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.surname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.birthPlace, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.birthPlace, new { htmlAttributes = new { @class = "form-control", @placeholder = "Doğum yerini daxil edin", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.birthPlace, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.birthDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.birthDate, new { htmlAttributes = new { @class = "form-control", @placeholder = "Doğum tarixini daxil edin", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.birthDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.gender, new SelectList(Model.lstGender, "idn", "name"), "Please select one")
                @*@Html.EditorFor(model => model.gender, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="display:none">
            @Html.LabelFor(model => model.genderName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.genderName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.genderName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.docNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.docNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Seriya nömrəsini daxil edin", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.docNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.finCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.finCode, new { htmlAttributes = new { @class = "form-control", @placeholder = "Finkodu daxil edin", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.finCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.phoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.phoneNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "Telefon nömrəsini daxil edin", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.phoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Emaili daxil edin", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" />
            </div>
        </div>
    </div>
}
@if (TempData.ContainsKey("Res_4"))
{
    <hr />
    <div class="alert alert-success" role="alert">@TempData["Res_4"]</div>
}
else
{
    if (TempData.ContainsKey("!Res_4"))
    {
        <hr />
        <div class="alert alert-danger" role="alert">@TempData["!Res_4"]</div>
    }
}
<hr />
<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-dark" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
